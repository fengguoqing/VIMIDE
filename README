Check my blog for full documentation about VIM and how to setup it up.

http://haridas.in/vim-as-your-ide.html
http://blog.csdn.net/wooin/article/details/1858917


We can start the installation by picking my Git Repository,

$git clone https://github.com/fengguoqing/VIMIDE.git
$cd VIMIDE

I kept all the required plugins as git submodules. So we will get the new changes from the plugin projects by updating the submodule project. While cloning my main repo, it won't retrieve the submodules or external plugin git projects. But we have all the settings and paths in my git projects itself. So we can easily fetch the current stable code from all the external projects. To do that, type below commands inside your Dotfiles folder.

$git submodule init
$git submodule update

Now you have all the files required to get start with Vim, Next thing is to link my git files as your vim files. To do that just create soft link of the Vim system files and then point it to my git repository files. Here is the steps.

$cd
$ln -s <path-to>VIMIDE/vim-files/vim .vim
$ln -s <path-to>VIMIDE/vim-files/vim/vimrc .vimrc

Thats it, now open your vim, you can see all the features described above are being available, except command-t. Because it requires a compilation. The compilation step is very simple.

$ cd <path-to>VIMIDE/vim-files/vim/bundle/command-t/ruby/command-t
$ ruby extconf.rb
$ make

Ctags:生成函数，变量, 结构, 宏的索引，方便查询跳转
TagList：列出了当前文件中的所有宏, 全局变量, 函数名等
NerdTree:文件浏览窗口
NerdCommenter:注释指定代码段
Minibuffer:打开文件的标签
QuickFix:提示代码中的不合规范的地方
winmanager:界面管理

